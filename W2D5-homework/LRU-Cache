# LRU Cache

class LRUCache
  def initialize
    @cache = {
      head: Link.new(nil, nil, @cache[:tail]),
      tail: (nil, @cache[:head], nil)
    }
  end

  def count
    # returns number of elements currently in cache
    cache.keys.count
  end

  def add(el)
    # adds element to cache according to LRU principle
  end

  def show
    # shows the items in the cache, with the LRU item first
  end

  private
  # helper methods go here!

end

class Link
attr_accessor :value, :next_el, :prev_el # :head, :tail

  def initialize(value, next_el, prev_el)
    @value = value
    @next_el = next_el
    @prev_el = prev_el
    # @head = true
    # @tail = false
end
